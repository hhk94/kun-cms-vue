{"remainingRequest":"D:\\code_by_hk\\kun-cms-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\code_by_hk\\kun-cms-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\code_by_hk\\kun-cms-vue\\src\\kun\\api\\article.js","dependencies":[{"path":"D:\\code_by_hk\\kun-cms-vue\\src\\kun\\api\\article.js","mtime":1587370747995},{"path":"D:\\code_by_hk\\kun-cms-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code_by_hk\\kun-cms-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\code_by_hk\\kun-cms-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/code_by_hk/kun-cms-vue/src/kun/api/article.js"],"names":["_axios","Cms","data","method","url","handleError","groups","params"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB,C,CAEA;;IAEqBC,G;;;;;;;;AACpB;;;;;;uGAK8BC,I;;;;;;;uBACPF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,MADoB;AAE5BC,kBAAAA,GAAG,EAAE,sBAFuB;AAG5BF,kBAAAA,IAAI,EAAJA,IAH4B;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;iDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;6GAKmCJ,I;;;;;;;uBAEZF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,KADoB;AAE5BC,kBAAAA,GAAG,EAAE,2BAFuB;AAG5BF,kBAAAA,IAAI,EAAJA,IAH4B;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;2GAKiCJ,I;;;;;;;uBAEVF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,QADoB;AAE5BC,kBAAAA,GAAG,EAAE,yBAFuB;AAG5BG,kBAAAA,MAAM,EAACL,IAHqB;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;uGAK6BJ,I;;;;;;;uBACNF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,MADoB;AAE5BC,kBAAAA,GAAG,EAAE,qBAFuB;AAG5BF,kBAAAA,IAAI,EAAJA,IAH4B;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;;;;mGAQyBJ,I;;;;;;;uBACFF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,MADoB;AAE5BC,kBAAAA,GAAG,EAAE,iBAFuB;AAG5BF,kBAAAA,IAAI,EAAJA,IAH4B;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;wGAK8BJ,I;;;;;;;uBACPF,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,KADoB;AAE5BC,kBAAAA,GAAG,EAAE,sBAFuB;AAG5BF,kBAAAA,IAAI,EAAJA,IAH4B;AAI5BG,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;sGAK4BC,M;;;;;;;uBACLP,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,QADoB;AAE5BC,kBAAAA,GAAG,EAAE,oBAFuB;AAG5BG,kBAAAA,MAAM,EAANA,MAH4B;AAI5BF,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;;AAER;;;;;;;;;mGAKyBC,M;;;;;;;uBACFP,MAAM,CAAC;AAC5BG,kBAAAA,MAAM,EAAE,KADoB;AAE5BC,kBAAAA,GAAG,EAAE,iBAFuB;AAG5BG,kBAAAA,MAAM,EAANA,MAH4B;AAI5BF,kBAAAA,WAAW,EAAE;AAJe,iBAAD,C;;;AAAtBC,gBAAAA,M;kDAMCA,M;;;;;;;;;;;;;;;QAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;SA7HoBL,G","sourcesContent":["import _axios from '@/kun/plugins/axios'\r\n\r\n// import store from '@/store'\r\n\r\nexport default class Cms {\r\n\t/**\r\n\t * 新增文章类别\r\n\t * @param {string} typename 分类名\r\n\t * @method post\r\n\t */\r\n\tstatic async article_type_add(data) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'cms/article_type_add',\r\n\t\t\tdata,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章分类列表\r\n\t * @param null\r\n\t * method get\r\n\t */\r\n\tstatic async article_type_list_get(data) {\r\n\t\t\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'cms/article_type_list_get',\r\n\t\t\tdata,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章类别删除\r\n\t * @param {int} id\r\n\t * method delete\r\n\t */\r\n\tstatic async article_type_delete(data) {\r\n\t\t\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: 'cms/article_type_delete',\r\n\t\t\tparams:data,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章中图片添加\r\n\t * @param {file} file[]\r\n\t * method post\r\n\t */\r\n\tstatic async article_add_img(data) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'cms/article_add_img',\r\n\t\t\tdata,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章保存\r\n\t * @param {string} article_title 文章名\r\n\t * @param {int} article_type_id\t文章类别id\r\n\t * @param {string} article_content\t文章内容\r\n\t * @param {int} article_input_id\t文章作者id\r\n\t * method post\r\n\t */\r\n\tstatic async article_add(data) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'cms/article_add',\r\n\t\t\tdata,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章分类列表\r\n\t * @param null\r\n\t * method get\r\n\t */\r\n\tstatic async article_list_get(data) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'cms/article_list_get',\r\n\t\t\tdata,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章删除\r\n\t * @param {int} id\r\n\t * method delete\r\n\t */\r\n\tstatic async article_delete(params) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'delete',\r\n\t\t\turl: 'cms/article_delete',\r\n\t\t\tparams,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t/**\r\n\t * 文章获取\r\n\t * @param {int} id\r\n\t * method get\r\n\t */\r\n\tstatic async article_get(params) {\r\n\t\tconst groups =  await _axios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'cms/article_get',\r\n\t\t\tparams,\r\n\t\t\thandleError: true,\r\n\t\t})\r\n\t\treturn groups\r\n\t}\r\n\t// static async createOneGroup(name, info, permission_ids) {\r\n\t//   const res = await post('cms/admin/group', {\r\n\t//     name,\r\n\t//     info,\r\n\t//     permission_ids,\r\n\t//   })\r\n\t//   return res\r\n\t// }\r\n}"]}]}